#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FastFoodWebsite.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_FASTFOOD")]
	public partial class DB_FASTFOODDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertORDERDETAIL(ORDERDETAIL instance);
    partial void UpdateORDERDETAIL(ORDERDETAIL instance);
    partial void DeleteORDERDETAIL(ORDERDETAIL instance);
    partial void InsertORDER(ORDER instance);
    partial void UpdateORDER(ORDER instance);
    partial void DeleteORDER(ORDER instance);
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    partial void InsertPRODUCTTYPE(PRODUCTTYPE instance);
    partial void UpdatePRODUCTTYPE(PRODUCTTYPE instance);
    partial void DeletePRODUCTTYPE(PRODUCTTYPE instance);
    partial void InsertROLE(ROLE instance);
    partial void UpdateROLE(ROLE instance);
    partial void DeleteROLE(ROLE instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    partial void InsertCART(CART instance);
    partial void UpdateCART(CART instance);
    partial void DeleteCART(CART instance);
    #endregion
		
		public DB_FASTFOODDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DB_FASTFOODConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB_FASTFOODDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_FASTFOODDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_FASTFOODDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_FASTFOODDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ORDERDETAIL> ORDERDETAILs
		{
			get
			{
				return this.GetTable<ORDERDETAIL>();
			}
		}
		
		public System.Data.Linq.Table<ORDER> ORDERs
		{
			get
			{
				return this.GetTable<ORDER>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCTTYPE> PRODUCTTYPEs
		{
			get
			{
				return this.GetTable<PRODUCTTYPE>();
			}
		}
		
		public System.Data.Linq.Table<ROLE> ROLEs
		{
			get
			{
				return this.GetTable<ROLE>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		public System.Data.Linq.Table<CART> CARTs
		{
			get
			{
				return this.GetTable<CART>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERDETAIL")]
	public partial class ORDERDETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ORDERID;
		
		private int _PRODUCTID;
		
		private string _NOTES;
		
		private System.Nullable<int> _QUANTITY;
		
		private System.Nullable<decimal> _PRICE;
		
		private EntityRef<ORDER> _ORDER;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnORDERIDChanging(int value);
    partial void OnORDERIDChanged();
    partial void OnPRODUCTIDChanging(int value);
    partial void OnPRODUCTIDChanged();
    partial void OnNOTESChanging(string value);
    partial void OnNOTESChanged();
    partial void OnQUANTITYChanging(System.Nullable<int> value);
    partial void OnQUANTITYChanged();
    partial void OnPRICEChanging(System.Nullable<decimal> value);
    partial void OnPRICEChanged();
    #endregion
		
		public ORDERDETAIL()
		{
			this._ORDER = default(EntityRef<ORDER>);
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDERID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ORDERID
		{
			get
			{
				return this._ORDERID;
			}
			set
			{
				if ((this._ORDERID != value))
				{
					if (this._ORDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORDERIDChanging(value);
					this.SendPropertyChanging();
					this._ORDERID = value;
					this.SendPropertyChanged("ORDERID");
					this.OnORDERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PRODUCTID
		{
			get
			{
				return this._PRODUCTID;
			}
			set
			{
				if ((this._PRODUCTID != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCTIDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCTID = value;
					this.SendPropertyChanged("PRODUCTID");
					this.OnPRODUCTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTES", DbType="NVarChar(MAX)")]
		public string NOTES
		{
			get
			{
				return this._NOTES;
			}
			set
			{
				if ((this._NOTES != value))
				{
					this.OnNOTESChanging(value);
					this.SendPropertyChanging();
					this._NOTES = value;
					this.SendPropertyChanged("NOTES");
					this.OnNOTESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int")]
		public System.Nullable<int> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Money")]
		public System.Nullable<decimal> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDERDETAIL", Storage="_ORDER", ThisKey="ORDERID", OtherKey="ORDERID", IsForeignKey=true)]
		public ORDER ORDER
		{
			get
			{
				return this._ORDER.Entity;
			}
			set
			{
				ORDER previousValue = this._ORDER.Entity;
				if (((previousValue != value) 
							|| (this._ORDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER.Entity = null;
						previousValue.ORDERDETAILs.Remove(this);
					}
					this._ORDER.Entity = value;
					if ((value != null))
					{
						value.ORDERDETAILs.Add(this);
						this._ORDERID = value.ORDERID;
					}
					else
					{
						this._ORDERID = default(int);
					}
					this.SendPropertyChanged("ORDER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_ORDERDETAIL", Storage="_PRODUCT", ThisKey="PRODUCTID", OtherKey="PRODUCTID", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.ORDERDETAILs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.ORDERDETAILs.Add(this);
						this._PRODUCTID = value.PRODUCTID;
					}
					else
					{
						this._PRODUCTID = default(int);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERS")]
	public partial class ORDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ORDERID;
		
		private System.Nullable<int> _USERID;
		
		private System.Nullable<decimal> _TOTAL_PRICE;
		
		private string _STATUS_OF_ORDER;
		
		private EntitySet<ORDERDETAIL> _ORDERDETAILs;
		
		private EntityRef<ORDER> _ORDER2;
		
		private EntityRef<ORDER> _ORDER1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnORDERIDChanging(int value);
    partial void OnORDERIDChanged();
    partial void OnUSERIDChanging(System.Nullable<int> value);
    partial void OnUSERIDChanged();
    partial void OnTOTAL_PRICEChanging(System.Nullable<decimal> value);
    partial void OnTOTAL_PRICEChanged();
    partial void OnSTATUS_OF_ORDERChanging(string value);
    partial void OnSTATUS_OF_ORDERChanged();
    #endregion
		
		public ORDER()
		{
			this._ORDERDETAILs = new EntitySet<ORDERDETAIL>(new Action<ORDERDETAIL>(this.attach_ORDERDETAILs), new Action<ORDERDETAIL>(this.detach_ORDERDETAILs));
			this._ORDER2 = default(EntityRef<ORDER>);
			this._ORDER1 = default(EntityRef<ORDER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDERID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ORDERID
		{
			get
			{
				return this._ORDERID;
			}
			set
			{
				if ((this._ORDERID != value))
				{
					if (this._ORDER1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORDERIDChanging(value);
					this.SendPropertyChanging();
					this._ORDERID = value;
					this.SendPropertyChanged("ORDERID");
					this.OnORDERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="Int")]
		public System.Nullable<int> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_PRICE", DbType="Money")]
		public System.Nullable<decimal> TOTAL_PRICE
		{
			get
			{
				return this._TOTAL_PRICE;
			}
			set
			{
				if ((this._TOTAL_PRICE != value))
				{
					this.OnTOTAL_PRICEChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_PRICE = value;
					this.SendPropertyChanged("TOTAL_PRICE");
					this.OnTOTAL_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS_OF_ORDER", DbType="NVarChar(100)")]
		public string STATUS_OF_ORDER
		{
			get
			{
				return this._STATUS_OF_ORDER;
			}
			set
			{
				if ((this._STATUS_OF_ORDER != value))
				{
					this.OnSTATUS_OF_ORDERChanging(value);
					this.SendPropertyChanging();
					this._STATUS_OF_ORDER = value;
					this.SendPropertyChanged("STATUS_OF_ORDER");
					this.OnSTATUS_OF_ORDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDERDETAIL", Storage="_ORDERDETAILs", ThisKey="ORDERID", OtherKey="ORDERID")]
		public EntitySet<ORDERDETAIL> ORDERDETAILs
		{
			get
			{
				return this._ORDERDETAILs;
			}
			set
			{
				this._ORDERDETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER", Storage="_ORDER2", ThisKey="ORDERID", OtherKey="ORDERID", IsUnique=true, IsForeignKey=false)]
		public ORDER ORDER2
		{
			get
			{
				return this._ORDER2.Entity;
			}
			set
			{
				ORDER previousValue = this._ORDER2.Entity;
				if (((previousValue != value) 
							|| (this._ORDER2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER2.Entity = null;
						previousValue.ORDER1 = null;
					}
					this._ORDER2.Entity = value;
					if ((value != null))
					{
						value.ORDER1 = this;
					}
					this.SendPropertyChanged("ORDER2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER", Storage="_ORDER1", ThisKey="ORDERID", OtherKey="ORDERID", IsForeignKey=true)]
		public ORDER ORDER1
		{
			get
			{
				return this._ORDER1.Entity;
			}
			set
			{
				ORDER previousValue = this._ORDER1.Entity;
				if (((previousValue != value) 
							|| (this._ORDER1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER1.Entity = null;
						previousValue.ORDER2 = null;
					}
					this._ORDER1.Entity = value;
					if ((value != null))
					{
						value.ORDER2 = this;
						this._ORDERID = value.ORDERID;
					}
					else
					{
						this._ORDERID = default(int);
					}
					this.SendPropertyChanged("ORDER1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERDETAILs(ORDERDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = this;
		}
		
		private void detach_ORDERDETAILs(ORDERDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCTS")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRODUCTID;
		
		private string _PRODUCTNAME;
		
		private string _PRODUCTDESCRIPTION;
		
		private decimal _PRICE;
		
		private string _PICTURE;
		
		private System.DateTime _CREATED_AT_OF_PROD;
		
		private System.Nullable<System.DateTime> _UPDATED_AT_OF_PROD;
		
		private System.Nullable<int> _PROD_TYPE_ID;
		
		private EntitySet<ORDERDETAIL> _ORDERDETAILs;
		
		private EntitySet<CART> _CARTs;
		
		private EntityRef<PRODUCTTYPE> _PRODUCTTYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRODUCTIDChanging(int value);
    partial void OnPRODUCTIDChanged();
    partial void OnPRODUCTNAMEChanging(string value);
    partial void OnPRODUCTNAMEChanged();
    partial void OnPRODUCTDESCRIPTIONChanging(string value);
    partial void OnPRODUCTDESCRIPTIONChanged();
    partial void OnPRICEChanging(decimal value);
    partial void OnPRICEChanged();
    partial void OnPICTUREChanging(string value);
    partial void OnPICTUREChanged();
    partial void OnCREATED_AT_OF_PRODChanging(System.DateTime value);
    partial void OnCREATED_AT_OF_PRODChanged();
    partial void OnUPDATED_AT_OF_PRODChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATED_AT_OF_PRODChanged();
    partial void OnPROD_TYPE_IDChanging(System.Nullable<int> value);
    partial void OnPROD_TYPE_IDChanged();
    #endregion
		
		public PRODUCT()
		{
			this._ORDERDETAILs = new EntitySet<ORDERDETAIL>(new Action<ORDERDETAIL>(this.attach_ORDERDETAILs), new Action<ORDERDETAIL>(this.detach_ORDERDETAILs));
			this._CARTs = new EntitySet<CART>(new Action<CART>(this.attach_CARTs), new Action<CART>(this.detach_CARTs));
			this._PRODUCTTYPE = default(EntityRef<PRODUCTTYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PRODUCTID
		{
			get
			{
				return this._PRODUCTID;
			}
			set
			{
				if ((this._PRODUCTID != value))
				{
					this.OnPRODUCTIDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCTID = value;
					this.SendPropertyChanged("PRODUCTID");
					this.OnPRODUCTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTNAME", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PRODUCTNAME
		{
			get
			{
				return this._PRODUCTNAME;
			}
			set
			{
				if ((this._PRODUCTNAME != value))
				{
					this.OnPRODUCTNAMEChanging(value);
					this.SendPropertyChanging();
					this._PRODUCTNAME = value;
					this.SendPropertyChanged("PRODUCTNAME");
					this.OnPRODUCTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTDESCRIPTION", DbType="NVarChar(MAX)")]
		public string PRODUCTDESCRIPTION
		{
			get
			{
				return this._PRODUCTDESCRIPTION;
			}
			set
			{
				if ((this._PRODUCTDESCRIPTION != value))
				{
					this.OnPRODUCTDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._PRODUCTDESCRIPTION = value;
					this.SendPropertyChanged("PRODUCTDESCRIPTION");
					this.OnPRODUCTDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Money NOT NULL")]
		public decimal PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PICTURE", DbType="NVarChar(MAX)")]
		public string PICTURE
		{
			get
			{
				return this._PICTURE;
			}
			set
			{
				if ((this._PICTURE != value))
				{
					this.OnPICTUREChanging(value);
					this.SendPropertyChanging();
					this._PICTURE = value;
					this.SendPropertyChanged("PICTURE");
					this.OnPICTUREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_AT_OF_PROD", DbType="Date NOT NULL")]
		public System.DateTime CREATED_AT_OF_PROD
		{
			get
			{
				return this._CREATED_AT_OF_PROD;
			}
			set
			{
				if ((this._CREATED_AT_OF_PROD != value))
				{
					this.OnCREATED_AT_OF_PRODChanging(value);
					this.SendPropertyChanging();
					this._CREATED_AT_OF_PROD = value;
					this.SendPropertyChanged("CREATED_AT_OF_PROD");
					this.OnCREATED_AT_OF_PRODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATED_AT_OF_PROD", DbType="Date")]
		public System.Nullable<System.DateTime> UPDATED_AT_OF_PROD
		{
			get
			{
				return this._UPDATED_AT_OF_PROD;
			}
			set
			{
				if ((this._UPDATED_AT_OF_PROD != value))
				{
					this.OnUPDATED_AT_OF_PRODChanging(value);
					this.SendPropertyChanging();
					this._UPDATED_AT_OF_PROD = value;
					this.SendPropertyChanged("UPDATED_AT_OF_PROD");
					this.OnUPDATED_AT_OF_PRODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_TYPE_ID", DbType="Int")]
		public System.Nullable<int> PROD_TYPE_ID
		{
			get
			{
				return this._PROD_TYPE_ID;
			}
			set
			{
				if ((this._PROD_TYPE_ID != value))
				{
					if (this._PRODUCTTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROD_TYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._PROD_TYPE_ID = value;
					this.SendPropertyChanged("PROD_TYPE_ID");
					this.OnPROD_TYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_ORDERDETAIL", Storage="_ORDERDETAILs", ThisKey="PRODUCTID", OtherKey="PRODUCTID")]
		public EntitySet<ORDERDETAIL> ORDERDETAILs
		{
			get
			{
				return this._ORDERDETAILs;
			}
			set
			{
				this._ORDERDETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_CART", Storage="_CARTs", ThisKey="PRODUCTID", OtherKey="PRODUCTID")]
		public EntitySet<CART> CARTs
		{
			get
			{
				return this._CARTs;
			}
			set
			{
				this._CARTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCTTYPE_PRODUCT", Storage="_PRODUCTTYPE", ThisKey="PROD_TYPE_ID", OtherKey="PROD_TYPE_ID", IsForeignKey=true)]
		public PRODUCTTYPE PRODUCTTYPE
		{
			get
			{
				return this._PRODUCTTYPE.Entity;
			}
			set
			{
				PRODUCTTYPE previousValue = this._PRODUCTTYPE.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCTTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCTTYPE.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._PRODUCTTYPE.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._PROD_TYPE_ID = value.PROD_TYPE_ID;
					}
					else
					{
						this._PROD_TYPE_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PRODUCTTYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERDETAILs(ORDERDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_ORDERDETAILs(ORDERDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
		
		private void attach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCTTYPE")]
	public partial class PRODUCTTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PROD_TYPE_ID;
		
		private string _PROD_TYPE_NAME;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPROD_TYPE_IDChanging(int value);
    partial void OnPROD_TYPE_IDChanged();
    partial void OnPROD_TYPE_NAMEChanging(string value);
    partial void OnPROD_TYPE_NAMEChanged();
    #endregion
		
		public PRODUCTTYPE()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_TYPE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PROD_TYPE_ID
		{
			get
			{
				return this._PROD_TYPE_ID;
			}
			set
			{
				if ((this._PROD_TYPE_ID != value))
				{
					this.OnPROD_TYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._PROD_TYPE_ID = value;
					this.SendPropertyChanged("PROD_TYPE_ID");
					this.OnPROD_TYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_TYPE_NAME", DbType="VarChar(50)")]
		public string PROD_TYPE_NAME
		{
			get
			{
				return this._PROD_TYPE_NAME;
			}
			set
			{
				if ((this._PROD_TYPE_NAME != value))
				{
					this.OnPROD_TYPE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._PROD_TYPE_NAME = value;
					this.SendPropertyChanged("PROD_TYPE_NAME");
					this.OnPROD_TYPE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCTTYPE_PRODUCT", Storage="_PRODUCTs", ThisKey="PROD_TYPE_ID", OtherKey="PROD_TYPE_ID")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCTTYPE = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCTTYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ROLES")]
	public partial class ROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ROLEID;
		
		private string _ROLENAME;
		
		private EntitySet<USER> _USERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROLEIDChanging(int value);
    partial void OnROLEIDChanged();
    partial void OnROLENAMEChanging(string value);
    partial void OnROLENAMEChanged();
    #endregion
		
		public ROLE()
		{
			this._USERs = new EntitySet<USER>(new Action<USER>(this.attach_USERs), new Action<USER>(this.detach_USERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLEID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ROLEID
		{
			get
			{
				return this._ROLEID;
			}
			set
			{
				if ((this._ROLEID != value))
				{
					this.OnROLEIDChanging(value);
					this.SendPropertyChanging();
					this._ROLEID = value;
					this.SendPropertyChanged("ROLEID");
					this.OnROLEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLENAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ROLENAME
		{
			get
			{
				return this._ROLENAME;
			}
			set
			{
				if ((this._ROLENAME != value))
				{
					this.OnROLENAMEChanging(value);
					this.SendPropertyChanging();
					this._ROLENAME = value;
					this.SendPropertyChanged("ROLENAME");
					this.OnROLENAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_USER", Storage="_USERs", ThisKey="ROLEID", OtherKey="ROLEID")]
		public EntitySet<USER> USERs
		{
			get
			{
				return this._USERs;
			}
			set
			{
				this._USERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USERs(USER entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = this;
		}
		
		private void detach_USERs(USER entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USERS")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USERID;
		
		private string _FULLNAME;
		
		private string _PHONE;
		
		private string _EMAIL;
		
		private System.Nullable<System.DateTime> _DAYOFBIRTH;
		
		private string _USERADDRESS;
		
		private string _USERPASSWORD;
		
		private int _ROLEID;
		
		private System.DateTime _CREATEDAT;
		
		private System.Nullable<System.DateTime> _UPDATEDAT;
		
		private EntitySet<CART> _CARTs;
		
		private EntityRef<ROLE> _ROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERIDChanging(int value);
    partial void OnUSERIDChanged();
    partial void OnFULLNAMEChanging(string value);
    partial void OnFULLNAMEChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnDAYOFBIRTHChanging(System.Nullable<System.DateTime> value);
    partial void OnDAYOFBIRTHChanged();
    partial void OnUSERADDRESSChanging(string value);
    partial void OnUSERADDRESSChanged();
    partial void OnUSERPASSWORDChanging(string value);
    partial void OnUSERPASSWORDChanged();
    partial void OnROLEIDChanging(int value);
    partial void OnROLEIDChanged();
    partial void OnCREATEDATChanging(System.DateTime value);
    partial void OnCREATEDATChanged();
    partial void OnUPDATEDATChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATChanged();
    #endregion
		
		public USER()
		{
			this._CARTs = new EntitySet<CART>(new Action<CART>(this.attach_CARTs), new Action<CART>(this.detach_CARTs));
			this._ROLE = default(EntityRef<ROLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FULLNAME", DbType="NVarChar(100)")]
		public string FULLNAME
		{
			get
			{
				return this._FULLNAME;
			}
			set
			{
				if ((this._FULLNAME != value))
				{
					this.OnFULLNAMEChanging(value);
					this.SendPropertyChanging();
					this._FULLNAME = value;
					this.SendPropertyChanged("FULLNAME");
					this.OnFULLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAYOFBIRTH", DbType="Date")]
		public System.Nullable<System.DateTime> DAYOFBIRTH
		{
			get
			{
				return this._DAYOFBIRTH;
			}
			set
			{
				if ((this._DAYOFBIRTH != value))
				{
					this.OnDAYOFBIRTHChanging(value);
					this.SendPropertyChanging();
					this._DAYOFBIRTH = value;
					this.SendPropertyChanged("DAYOFBIRTH");
					this.OnDAYOFBIRTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERADDRESS", DbType="NVarChar(255)")]
		public string USERADDRESS
		{
			get
			{
				return this._USERADDRESS;
			}
			set
			{
				if ((this._USERADDRESS != value))
				{
					this.OnUSERADDRESSChanging(value);
					this.SendPropertyChanging();
					this._USERADDRESS = value;
					this.SendPropertyChanged("USERADDRESS");
					this.OnUSERADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERPASSWORD", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string USERPASSWORD
		{
			get
			{
				return this._USERPASSWORD;
			}
			set
			{
				if ((this._USERPASSWORD != value))
				{
					this.OnUSERPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._USERPASSWORD = value;
					this.SendPropertyChanged("USERPASSWORD");
					this.OnUSERPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLEID", DbType="Int NOT NULL")]
		public int ROLEID
		{
			get
			{
				return this._ROLEID;
			}
			set
			{
				if ((this._ROLEID != value))
				{
					if (this._ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnROLEIDChanging(value);
					this.SendPropertyChanging();
					this._ROLEID = value;
					this.SendPropertyChanged("ROLEID");
					this.OnROLEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDAT", DbType="Date NOT NULL")]
		public System.DateTime CREATEDAT
		{
			get
			{
				return this._CREATEDAT;
			}
			set
			{
				if ((this._CREATEDAT != value))
				{
					this.OnCREATEDATChanging(value);
					this.SendPropertyChanging();
					this._CREATEDAT = value;
					this.SendPropertyChanged("CREATEDAT");
					this.OnCREATEDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDAT", DbType="Date")]
		public System.Nullable<System.DateTime> UPDATEDAT
		{
			get
			{
				return this._UPDATEDAT;
			}
			set
			{
				if ((this._UPDATEDAT != value))
				{
					this.OnUPDATEDATChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDAT = value;
					this.SendPropertyChanged("UPDATEDAT");
					this.OnUPDATEDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_CART", Storage="_CARTs", ThisKey="USERID", OtherKey="USERID")]
		public EntitySet<CART> CARTs
		{
			get
			{
				return this._CARTs;
			}
			set
			{
				this._CARTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_USER", Storage="_ROLE", ThisKey="ROLEID", OtherKey="ROLEID", IsForeignKey=true)]
		public ROLE ROLE
		{
			get
			{
				return this._ROLE.Entity;
			}
			set
			{
				ROLE previousValue = this._ROLE.Entity;
				if (((previousValue != value) 
							|| (this._ROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ROLE.Entity = null;
						previousValue.USERs.Remove(this);
					}
					this._ROLE.Entity = value;
					if ((value != null))
					{
						value.USERs.Add(this);
						this._ROLEID = value.ROLEID;
					}
					else
					{
						this._ROLEID = default(int);
					}
					this.SendPropertyChanged("ROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CART")]
	public partial class CART : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CARTID;
		
		private System.Nullable<int> _PRODUCTID;
		
		private System.Nullable<int> _USERID;
		
		private System.Nullable<int> _QUANTITY;
		
		private System.Nullable<decimal> _PRICE;
		
		private string _NOTES;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCARTIDChanging(int value);
    partial void OnCARTIDChanged();
    partial void OnPRODUCTIDChanging(System.Nullable<int> value);
    partial void OnPRODUCTIDChanged();
    partial void OnUSERIDChanging(System.Nullable<int> value);
    partial void OnUSERIDChanged();
    partial void OnQUANTITYChanging(System.Nullable<int> value);
    partial void OnQUANTITYChanged();
    partial void OnPRICEChanging(System.Nullable<decimal> value);
    partial void OnPRICEChanged();
    partial void OnNOTESChanging(string value);
    partial void OnNOTESChanged();
    #endregion
		
		public CART()
		{
			this._PRODUCT = default(EntityRef<PRODUCT>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARTID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CARTID
		{
			get
			{
				return this._CARTID;
			}
			set
			{
				if ((this._CARTID != value))
				{
					this.OnCARTIDChanging(value);
					this.SendPropertyChanging();
					this._CARTID = value;
					this.SendPropertyChanged("CARTID");
					this.OnCARTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTID", DbType="Int")]
		public System.Nullable<int> PRODUCTID
		{
			get
			{
				return this._PRODUCTID;
			}
			set
			{
				if ((this._PRODUCTID != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCTIDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCTID = value;
					this.SendPropertyChanged("PRODUCTID");
					this.OnPRODUCTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="Int")]
		public System.Nullable<int> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int")]
		public System.Nullable<int> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Money")]
		public System.Nullable<decimal> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTES", DbType="NVarChar(MAX)")]
		public string NOTES
		{
			get
			{
				return this._NOTES;
			}
			set
			{
				if ((this._NOTES != value))
				{
					this.OnNOTESChanging(value);
					this.SendPropertyChanging();
					this._NOTES = value;
					this.SendPropertyChanged("NOTES");
					this.OnNOTESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_CART", Storage="_PRODUCT", ThisKey="PRODUCTID", OtherKey="PRODUCTID", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.CARTs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.CARTs.Add(this);
						this._PRODUCTID = value.PRODUCTID;
					}
					else
					{
						this._PRODUCTID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_CART", Storage="_USER", ThisKey="USERID", OtherKey="USERID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.CARTs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.CARTs.Add(this);
						this._USERID = value.USERID;
					}
					else
					{
						this._USERID = default(Nullable<int>);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
